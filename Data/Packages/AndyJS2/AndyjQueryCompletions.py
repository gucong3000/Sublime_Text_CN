import sublime, sublime_plugin

compjQ = [
    # "jQuery", # redundant (would appear twice)
    ("context", "context"),
    ("jQuery()", "jQuery(${1})$0"),
    ("jquery\tversion", "jquery"),   # version number
    ("callback", "function ($1) {\n\t$2\n}$0"),
    ("handler", "function ($1) {\n\t$2\n}$0"),

    ("add()\tjQuery", "add(${1:selector}${2:[, context]})$0"),
    ("addClass()\tjQuery", "addClass(${1:classname_or_fn})$0"),
    ("after()\tjQuery", "after(${1:contents_or_fn})$0"),
    ("ajaxComplete()\tjQuery", "ajaxComplete(${1:handler})$0"),
    ("ajaxError()\tjQuery", "ajaxError(${1:handler})$0"),
    ("ajaxSend()\tjQuery", "ajaxSend(${1:handler})$0"),
    ("ajaxStart()\tjQuery", "ajaxStart(${1:handler})$0"),
    ("ajaxStop()\tjQuery", "ajaxStop(${1:handler})$0"),
    ("ajaxSuccess()\tjQuery", "ajaxSuccess(${1:handler})$0"),
    ("andSelf()\tjQuery", "andSelf()$0"),
    ("animate(duration)\tjQuery", "animate(${1:properties}${2:[, duration]}${3:[, easing]}${4:[, complete]})$0"),
    ("animate(options)\tjQuery", "animate(${1:properties}, ${2:options})$0"),
    ("append()\tjQuery", "append(${1:contents_or_fn})$0"),
    ("appendTo()\tjQuery", "appendTo(${1:target})$0"),
    ("attr()\tjQuery", "attr(${1:attributeName}${2:[, value]})$0"),
    ("before()\tjQuery", "before(${1:contents_or_fn})$0"),
    ("bind(events)\tjQuery", "bind(${1:events})$0"),
    ("bind()\tjQuery", "bind(${1:eventType}${2:[, eventData]}${3:[, preventBubble_or_fn]})$0"),
    ("blur()\tjQuery", "blur()$0"),
    ("blur(handler)\tjQuery", "blur(${1:[eventData, ]}${2:handler})$0"),
    ("change()\tjQuery", "change()$0"),
    ("change(handler)\tjQuery", "change(${1:[eventData, ]}${2:handler})$0"),
    ("children()\tjQuery", "children(${1:[selector]})$0"),
    ("clearQueue()\tjQuery", "clearQueue(${1:[queueName]})$0"),
    ("click()\tjQuery", "click()$0"),
    ("click(handler)\tjQuery", "click(${1:[eventData, ]}${2:handler})$0"),
    ("clone()\tjQuery", "clone(${1:[withDataAndEvents]}${2:[, deep]})$0"),
    ("closest()\tjQuery", "closest(${1:selectors}${2:[, context]})$0"),
    ("contents()\tjQuery", "contents()$0"),
    ("css()\tjQuery", "css(${1:propertyName}${2:[, value]})$0"),
    ("data(key, value)\tjQuery", "data(${1:key}${2:[, value]})$0"),
    ("data(obj)\tjQuery", "data(${1})$0"),
    ("dblclick()\tjQuery", "dblclick()$0"),
    ("dblclick(handler)\tjQuery", "dblclick(${1:[eventData, ]}${2:handler})$0"),
    ("delay()\tjQuery", "delay(${1:duration}${2:[, queueName]})$0"),
    ("delegate()\tjQuery", "delegate(${1:selector}, ${2:events})$0"),
    ("dequeue()\tjQuery", "dequeue(${1:[queueName]})$0"),
    ("die()\tjQuery", "die()$0"),
    ("die(event)\tjQuery", "die(${1:eventType}${2:[, handler]})$0"),
    ("each()\tjQuery", "each(function (index, elem) {\n\t$1\n})$0"),
    ("empty()\tjQuery", "empty()$0"),
    ("end()\tjQuery", "end()$0"),
    ("eq()\tjQuery", "eq(${1:index})$0"),
    ("error()\tjQuery", "error(${1:[eventData, ]}${2:handler})$0"),
    ("fadeIn()\tjQuery", "fadeIn(${1:[duration]}${2:[, easing]}${3:[, callback]})$0"),
    ("fadeOut()\tjQuery", "fadeOut(${1:[duration]}${2:[, easing]}${3:[, callback]})$0"),
    ("fadeTo()\tjQuery", "fadeTo(${1:duration}, ${2:opacity}${3:[, easing]}${4:[, callback]})$0"),
    ("fadeToggle()\tjQuery", "fadeToggle(${1:[duration]}${2:[, easing]}${3:[, callback]})$0"),
    ("filter()\tjQuery", "filter(${1:selector_or_fn})$0"),
    ("find()\tjQuery", "find(${1:selector})$0"),
    ("first()\tjQuery", "first()$0"),
    ("focus()\tjQuery", "focus()$0"),
    ("focus(handler)\tjQuery", "focus(${1:[eventData, ]}${2:handler})$0"),
    ("focusin()\tjQuery", "focusin(${1:[eventData, ]}${2:handler})$0"),
    ("focusout()\tjQuery", "focusout(${1:[eventData, ]}${2:handler})$0"),
    ("get()\tjQuery", "get(${1:[index]})$0"),
    ("has()\tjQuery", "has(${1:selector/contained})$0"),
    ("hasClass()\tjQuery", "hasClass(${1:className})$0"),
    ("height()\tjQuery", "height()$0"),
    ("height(value)\tjQuery", "height(${1:value_or_fn})$0"),
    ("hide()\tjQuery", "hide()$0"),
    ("hide(duration)\tjQuery", "hide(${1:[duration]}${2:[, easing]}${3:[, callback]})$0"),
    ("hover()\tjQuery", "hover(${1:handlers_inout})$0"),
    ("html()\tjQuery", "html(${1:[htmlString]})$0"),
    ("html(fn)\tjQuery", "html(function (index, oldhtml) {\n\t$1\n})$0"),
    ("index()\tjQuery", "index(${1:[selector]})$0"),
    ("innerHeight()\tjQuery", "innerHeight()$0"),
    ("innerWidth()\tjQuery", "innerWidth()$0"),
    ("insertAfter()\tjQuery", "insertAfter(${1:target})$0"),
    ("insertBefore()\tjQuery", "insertBefore(${1:target})$0"),
    ("is()\tjQuery", "is(${1:selector_or_fn})$0"),
    ("keydown()\tjQuery", "keydown()$0"),
    ("keydown(handler)\tjQuery", "keydown(${1:[eventData, ]}${2:handler})$0"),
    ("keypress()\tjQuery", "keypress()$0"),
    ("keypress(handler)\tjQuery", "keypress(${1:[eventData, ]}${2:handler})$0"),
    ("keyup()\tjQuery", "keyup()$0"),
    ("keyup(handler)\tjQuery", "keyup(${1:[eventData, ]}${2:handler})$0"),
    ("last()\tjQuery", "last()$0"),
    ("live()\tjQuery (depr.)", "live($1)$0"),
    ("load(handler)\tjQuery", "load(${1:[eventData, ]}${2:handler})$0"),
    ("load(url)\tjQuery", "load(${1:url}${2:[, data]}${3:[, complete(responseText, textStatus, XMLHttpRequest)]})$0"),
    ("map()\tjQuery", "map(function (index, domElement) {\n\t$1\n})$0"),
    ("mousedown()\tjQuery", "mousedown()$0"),
    ("mousedown(handler)\tjQuery", "mousedown(${1:[eventData, ]}${2:handler})$0"),
    ("mouseenter()\tjQuery", "mouseenter()$0"),
    ("mouseenter(handler)\tjQuery", "mouseenter(${1:[eventData, ]}${2:handler})$0"),
    ("mouseleave()\tjQuery", "mouseleave()$0"),
    ("mouseleave(handler)\tjQuery", "mouseleave(${1:[eventData, ]}${2:handler})$0"),
    ("mousemove()\tjQuery", "mousemove()$0"),
    ("mousemove(handler)\tjQuery", "mousemove(${1:[eventData, ]}${2:handler})$0"),
    ("mouseout()\tjQuery", "mouseout()$0"),
    ("mouseout(handler)\tjQuery", "mouseout(${1:[eventData, ]}${2:handler})$0"),
    ("mouseover()\tjQuery", "mouseover()$0"),
    ("mouseover(handler)\tjQuery", "mouseover(${1:[eventData, ]}${2:handler})$0"),
    ("mouseup()\tjQuery", "mouseup()$0"),
    ("mouseup(handler)\tjQuery", "mouseup(${1:[eventData, ]}${2:handler})$0"),
    ("next()\tjQuery", "next(${1:[selector]})$0"),
    ("nextAll()\tjQuery", "nextAll(${1:[selector]})$0"),
    ("nextUntil()\tjQuery", "nextUntil(${1:[selector]}${2:[, filter]})$0"),
    ("not()\tjQuery", "not(${1:selector_or_fn})$0"),
    ("off()\tjQuery", "off($1)$0"),
    ("offset()\tjQuery", "offset(${1:[coords_or_fn]})$0"),
    ("offsetParent()\tjQuery", "offsetParent()$0"),
    ("on()\tjQuery", "on($1)$0"),
    ("one()\tjQuery", "one($1)$0"),
    ("outerHeight()\tjQuery", "outerHeight(${1:[includeMargin]})$0"),
    ("outerWidth()\tjQuery", "outerWidth(${1:[includeMargin]})$0"),
    ("parent()\tjQuery", "parent(${1:[selector]})$0"),
    ("parents()\tjQuery", "parents(${1:[selector]})$0"),
    ("parentsUntil()\tjQuery", "parentsUntil(${1:[selector]}${2:[, filter]})$0"),
    ("position()\tjQuery", "position()$0"),
    ("prepend()\tjQuery", "prepend(${1:contents_or_fn})$0"),
    ("prependTo()\tjQuery", "prependTo(${1:target})$0"),
    ("prev()\tjQuery", "prev(${1:[selector]})$0"),
    ("prevAll()\tjQuery", "prevAll(${1:[selector]})$0"),
    ("prevUntil()\tjQuery", "prevUntil(${1:[selector]}${2:[, filter]})$0"),
    ("promise()\tjQuery", "promise(${1:[type]}${2:[, target]})$0"),
    ("prop()\tjQuery", "prop(${1:propertyName_or_map}${2:[, value_or_fn]})$0"),
    ("pushStack()\tjQuery", "pushStack(${1:elements}${2:[, name]}${3:[, arguments]})$0"),
    ("queue()\tjQuery", "queue(${1:[queueName]}${2:[, newQueue_or_fn]})$0"),
    ("ready()\tjQuery", "ready(${1:handler})$0"),
    ("remove()\tjQuery", "remove(${1:[selector]})$0"),
    ("removeAttr()\tjQuery", "removeAttr(${1:attributeName})$0"),
    ("removeClass()\tjQuery", "removeClass(${1:[className_or_fn]})$0"),
    ("removeData()\tjQuery", "removeData(${1:[name_or_list]})$0"),
    ("removeProp()\tjQuery", "removeProp(${1:propertyName})$0"),
    ("replaceAll()\tjQuery", "replaceAll(${1:target})$0"),
    ("replaceWith()\tjQuery", "replaceWith(${1:newContent_or_fn})$0"),
    ("resize()\tjQuery", "resize()$0"),
    ("resize(handler)\tjQuery", "resize(${1:[eventData, ]}${2:handler})$0"),
    ("scroll()\tjQuery", "scroll()$0"),
    ("scroll(handler)\tjQuery", "scroll(${1:[eventData, ]}${2:handler})$0"),
    ("scrollLeft()\tjQuery", "scrollLeft(${1:[value]})$0"),
    ("scrollTop()\tjQuery", "scrollTop(${1:[value]})$0"),
    ("select()\tjQuery", "select()$0"),
    ("select(handler)\tjQuery", "select(${1:[eventData, ]}${2:handler})$0"),
    ("serialize()\tjQuery", "serialize()$0"),
    ("serializeArray()\tjQuery", "serializeArray()$0"),
    ("show()\tjQuery", "show()$0"),
    ("show(duration)\tjQuery", "show(${1:[duration]}${2:[, easing]}${3:[, callback]})$0"),
    ("siblings()\tjQuery", "siblings(${1:[selector]})$0"),
    ("size()\tjQuery", "size()$0"),
    ("slice()\tjQuery", "slice(${1:start}${2:[, end]})$0"),
    ("slideDown()\tjQuery", "slideDown(${1:[duration]}${2:[, easing]}${3:[, callback]})$0"),
    ("slideToggle()\tjQuery", "slideToggle(${1:[duration]}${2:[, easing]}${3:[, callback]})$0"),
    ("slideUp()\tjQuery", "slideUp(${1:[duration]}${2:[, easing]}${3:[, callback]})$0"),
    ("stop()\tjQuery", "stop(${1:[queue]}${2:[, clearQueue]}${3:[, jumpToEnd]})$0"),
    ("submit()\tjQuery", "submit()$0"),
    ("submit(handler)\tjQuery", "submit(${1:[eventData, ]}${2:handler})$0"),
    ("text()\tjQuery", "text($1)$0"),
    ("toArray()\tjQuery", "toArray($1)$0"),
    ("toggle()\tjQuery", "toggle($1)$0"),
    ("toggleClass()\tjQuery", "toggleClass($1)$0"),
    ("trigger(event)\tjQuery", "trigger(${1:event})$0"),
    ("trigger(type)\tjQuery", "trigger(${1:eventType}${2:[, extraParameters]})$0"),
    ("triggerHandler()\tjQuery", "triggerHandler(${1:eventType}${2:[, extraParameters]})$0"),
    ("unbind()\tjQuery", "unbind($1)$0"),
    ("undelegate()\tjQuery", "undelegate($1)$0"),
    ("unload()\tjQuery", "unload(${1:[eventData, ]}${2:handler})$0"),
    ("unwrap()\tjQuery", "unwrap()$0"),
    ("val()\tjQuery", "val()$0"),
    ("val(value)\tjQuery", "val(${1:value_or_fn})$0"),
    ("width()\tjQuery", "width()$0"),
    ("width(value)\tjQuery", "width(${1:value_or_fn})$0"),
    ("wrap()\tjQuery", "wrap(${1:element_or_fn})$0"),
    ("wrapAll()\tjQuery", "wrapAll(${1:wrappingElement})$0"),
    ("wrapInner()\tjQuery", "wrapInner(${1:element_or_fn})$0"),

    ("ajax()\t$.", "ajax(${1:[url, ]}${2:[settings]})$0"),
    ("ajaxPrefilter()\t$.", "ajaxPrefilter($1)$0"),
    ("ajaxSetup()\t$.", "ajaxSetup(${1:options})$0"),
    ("boxModel\t$.deprecated ", "boxModel"),
    ("browser\t$.deprecated ", "browser"),
    ("Callbacks()\t$.", "Callbacks(${1:[flags]})$0"),
    ("contains()\t$.", "contains(${1:container}, ${2:contained})$0"),
    ("cssHooks\t$.", "cssHooks"),
    ("data()\t$.", "data(${1:element}${2:[, key]}${3:[, value]})$0"),
    ("dequeue()\t$.", "dequeue(${1:element}${2:[, queueName]})$0"),
    ("each()\t$.", "each(${1:collection}, ${2:callback(index, value)})$0"),
    ("error()\t$.", "error(${1:message})$0"),
    ("extend()\t$.", "extend(${1:[deep, ]}${2:target}${3:[, objects]})$0"),
    ("interval\t$.", "interval"),
    ("off\t$.", "off"),
    ("get()\t$.", "get(${1:url}${2:[, data]}${3:[, success(data, textStatus, jqXHR)]}${4:[, dataType]})$0"),
    ("getJSON()\t$.", "getJSON(${1:url}${2:[, data]}${3:[, success(data, textStatus, jqXHR)]})$0"),
    ("getScript()\t$.", "getScript(${1:url}${2:[, success(script, textStatus, jqXHR)]})$0"),
    ("globalEval()\t$.", "globalEval(${1:code})$0"),
    ("grep()\t$.", "grep(${1:array}, ${2:function(element, index)}${3:[, invert]})$0"),
    ("hasData()\t$.", "hasData(${1:element})$0"),
    ("holdReady()\t$.", "holdReady(${1:hold})$0"),
    ("inArray()\t$.", "inArray(${1:value}, ${2:array}${3:[, fromIndex]})$0"),
    ("isArray()\t$.", "isArray(${1:obj})$0"),
    ("isEmptyObject()\t$.", "isEmptyObject(${1:object})$0"),
    ("isFunction()\t$.", "isFunction(${1:obj})$0"),
    ("isNumeric()\t$.", "isNumeric(${1:value})$0"),
    ("isPlainObject()\t$.", "isPlainObject(${1:object})$0"),
    ("isWindow()\t$.", "isWindow(${1:obj})$0"),
    ("isXMLDoc()\t$.", "isXMLDoc(${1:node})$0"),
    ("makeArray()\t$.", "makeArray(${1:obj})$0"),
    ("map()\t$.", "map(${1:arrayOrObject}, ${2:callback(elementOrValue, indexOrKey)})$0"),
    ("merge()\t$.", "merge(${1:first}, ${2:second})$0"),
    ("noConflict()\t$.", "noConflict(${1:[removeAll]})$0"),
    ("noop()\t$.", "noop()$0"),
    ("now()\t$.", "now()$0"),
    ("param()\t$.", "param(${1:obj}${2:[, traditional]})$0"),
    ("parseJSON()\t$.", "parseJSON(${1:json})$0"),
    ("parseXML()\t$.", "parseXML(${1:data})$0"),
    ("post()\t$.", "post(${1:url}${2:[, data]}${3:[, success(data, textStatus, jqXHR)]}${4:[, dataType]})$0"),
    ("proxy()\t$.", "proxy(${1:function/context}, ${2:context/name})$0"),
    ("queue()\t$.", "queue(${1:element}${2:[, queueName]}${3:[, newQueue_or_fn]})$0"),
    ("removeData()\t$.", "removeData(${1:element}${2:[, name]})$0"),
    ("support\t$.", "support"),
    ("trim()\t$.", "trim(${1:str})$0"),
    ("type()\t$.", "type(${1:obj})$0"),
    ("unique()\t$.", "unique(${1:array})$0"),
    ("when()\t$.", "when(${1:deferreds})$0"),

    ("currentTarget\tjQ event", "currentTarget"),
    ("data\tjQ event", "data"),
    ("delegateTarget\tjQ event", "delegateTarget"),
    ("isDefaultPrevented()\tjQ event", "isDefaultPrevented()$0"),
    ("isImmediatePropagationStopped()\tjQ event", "isImmediatePropagationStopped()$0"),
    ("isPropagationStopped()\tjQ event", "isPropagationStopped()$0"),
    ("namespace\tjQ event", "namespace"),
    ("pageX\tjQ event", "pageX"),
    ("pageY\tjQ event", "pageY"),
    ("preventDefault()\tjQ event", "preventDefault()$0"),
    ("relatedTarget\tjQ event", "relatedTarget"),
    ("result\tjQ event", "result"),
    ("stopImmediatePropagation()\tjQ event", "stopImmediatePropagation()$0"),
    ("stopPropagation()\tjQ event", "stopPropagation()$0"),
    ("target\tjQ event", "target"),
    ("timeStamp\tjQ event", "timeStamp"),
    ("type\tjQ event", "type"),
    ("which\tjQ event", "which"),

    ("add()\tjQ callbacks", "add(${1:callbacks})$0"),
    ("disable()\tjQ callbacks", "disable()$0"),
    ("empty()\tjQ callbacks", "empty()$0"),
    ("fire()\tjQ callbacks", "fire(${1:arguments})$0"),
    ("fired()\tjQ callbacks", "fired()$0"),
    ("fireWith()\tjQ callbacks", "fireWith(${1:context}${2:[, args]})$0"),
    ("has()\tjQ callbacks", "has(${1:callback})$0"),
    ("lock()\tjQ callbacks", "lock()$0"),
    ("locked()\tjQ callbacks", "locked()$0"),
    ("remove()\tjQ callbacks", "remove(${1:callbacks})$0"),

    ("always()\tjQ deferred", "always(${1:alwaysCallbacks})$0"),
    ("done()\tjQ deferred", "done(${1:doneCallbacks})$0"),
    ("fail()\tjQ deferred", "fail(${1:failCallbacks})$0"),
    ("isRejected()\tjQ deferred", "isRejected()$0"),
    ("isResolved()\tjQ deferred", "isResolved()$0"),
    ("notify()\tjQ deferred", "notify(${1:args})$0"),
    ("notifyWith()\tjQ deferred", "notifyWith(${1:context}${2:[, args]})$0"),
    ("pipe()\tjQ deferred", "pipe(${1:[doneFilter]}${2:[, failFilter]}${3:[, progressFilter]})$0"),
    ("progress()\tjQ deferred", "progress(${1:progressCallbacks})$0"),
    ("promise()\tjQ deferred", "promise(${1:[target]})$0"),
    ("reject()\tjQ deferred", "reject(${1:args})$0"),
    ("rejectWith()\tjQ deferred", "rejectWith(${1:context}${2:[, args]})$0"),
    ("resolve()\tjQ deferred", "resolve(${1:args})$0"),
    ("resolveWith()\tjQ deferred", "resolveWith(${1:context}${2:[, args]})$0"),
    ("state()\tjQ deferred", "state()$0"),
    ("then()\tjQ deferred", "then(${1:doneCallbacks}, ${2:failCallbacks}${3:[, progressCallbacks]})$0")
]

compAll = list(compjQ)      # could use different lists

class AndyjQueryCompletions(sublime_plugin.EventListener):
    def on_query_completions(self, view, prefix, locations):
        global compAll
        if not view.match_selector(locations[0], \
                'source.js.jquery -string -comment -constant -meta.selector'):
            return []
        completions = []
        pt = locations[0] - len(prefix) - 1
        # get the character before the trigger
        ch = view.substr(sublime.Region(pt, pt + 1)) if pt >= 0 else None
        if ch == '.': pass
        else: pass
        word = view.word(pt - 1) if pt >= 0 else None
        word = view.substr(word) if word is not None else None
        if word is not None and len(word) > 1:
            pass
        completions = compAll
        compDefault = [view.extract_completions(prefix)]
        compDefault = [(item + "\tDefault", item) for sublist in compDefault 
            for item in sublist if len(item) > 3]       # flatten
        compDefault = list(set(compDefault))        # make unique
        compFull = list(completions)
        compFull.extend(compDefault)
        compFull.sort()
        return (compFull, sublime.INHIBIT_WORD_COMPLETIONS |
            sublime.INHIBIT_EXPLICIT_COMPLETIONS)